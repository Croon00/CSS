// 웹퍼블리싱 과정 
html : 컨텐츠 
css : 디자인 
js/jq : 동작

// CSS를 사용하는 목적 
- 웹문서의 내용과 상관없이 디자인만 바꿀 수 있다. 
- CSS Zen Garden 
(http://www.csszengarden.com/)


// CSS 위치에 따른 종류 
- 인라인 
- 문서 내부 방식 
- 문서 외부 방식 


// css
- 인라인 방식의 특징 
 : 직관적이다. 
 : 우선순위가 높다. 
 : 재사용을 할 수 없다. 
 : 코딩소스가 길어진다. 

// 인라인방식 문법 
<html태그 style='css속성1:값1;css속성2:값2 ... '>

--------------------------------------------------
// 배경색상 css 속성 
background/background-color
    : 16진수 색상값 
    : 영문색상명 
    : rgba(red, green, blue, alpha)
    : hsla(hue, saturation, light, alpha)

//  글자색상 css 속성 
color 
    : 16진수 색상값 
    : 영문색상명 
    : rgba(red, green, blue, alpha)
    : hsla(hue, saturation, light, alpha)


// 문단 관련 css 속성 
- text-align : 정렬, center, left, right, justify 


- 가로, 세로크기 css 속성 
 width:숫자단위(%, px)
 height:숫자단위(%, px)

- 줄간격  css 속성 
 line-height:숫자단위(%,px)

- 글자와 글자사이간격  css 속성 
  letter-spacing:숫자단위(em,px)

- 단어와 단어사이간격  css 속성 
  word-spacing:숫자단위(em,px)

- text-decoration : underline/none/overline/line-through
  글자 밑줄 스타일

- font-style:normal/italic/oblique
  이탤릭 글자 스타일 

- font-variant :small-caps
  소문자 크기로 대문자 표시 


- text-transform : 텍스트 대소문자 변경 
    captalize/uppercase/lowercase


- text-shadow
  text-shadow : none / 가로거리 세로거리 번짐정도 색상
  예:
  text-shadow:black 2px 2px 3px"

// 글자와글자사이 공백 지정방법 
1) pre 태그 사용 
2) &nbsp; 공백한글자에대한 엔티티 코드값 
3) css 적용 
   white-space:pre 

- white-space : 공백처리 
normal/nowrap/pre/pre-line


- 글자 크기와 관련된 속성 
font-size:숫자단위(em,px,%)
font-size 단위 : px, %, pt, em, 예약어, 기본크기는 16px

- 글자 진하게 관련된 속성 
font-weight:bold
font-weight:200%

- text-indent : 들여쓰기 

- 글꼴 
font-familly:제1글꼴, 제2글꼴 ...
 : 1글꼴이 없으면 2글꼴 적용 
 : 글꼴이름이 공백이 있는 경우는 인용부호 이용해서 묶어준다 
예) 
 font-family:'맑은 고딕', 돋움, Arial

- 글자속성(글꼴, 글자크기 ...)을 함께 지정하는 축약속성 
font:글자크기 글꼴 ... , / 이용 
예) font:20px '맑은 고딕'

// html 태그 블록 지정 요소 
div : 블록 지정 
 division 
 
span : 인라인블록 지정 
  글자 일부에 디자인 적용시 사용 

// 웹폰트 
구글 웹폰트 https://fonts.g `1oogle.com
1) Laguage는 Korean으로 선택 
2) 적용하고자하는 폰트 클릭
  예) Nanum Pen Script
3) [+ Select This Style] 클릭
4) 오른쪽 상단의 [View Your Selected familly] 클릭
5) 오른쪽의 [Selected family] 에서 [Embeded ]탭 클릭
6) <link>@import 에서 소스 복사 후 <head>와 </head> 사이에 붙이기 
  예) 
  <link href="https://fonts.googleapis.com/css2?family=Nanum+Pen+Script&display=swap" rel="stylesheet">
7) [CSS rules to specify families]에서 적용하고자하는 글꼴명 확인 
   예)font-family: 'Nanum Pen Script', cursive;
8) 적용하고자하는 태그안에 style="font-family:글꼴" 형태로 적용
   예) <span style="font-family:'Nanum Pen Script', cursive">
        글내용 </span>

-----------------------------------
// 리스트관련 속성 
list-style: 축약속성 
list-style-image:url(이미지경로)
list-style-position:inside/outside
list-style-type : 
  none/disc/square/circle
  lower-alpha/upper-alpha/upper-roman/lower-roman/decimal/decimal-leading-zero



--------------
: box 모델과 관련된 속성 
- width 
- height 
- border
- padding

-----------------------------------
// 테두리 관련 css 속성 
border-style
:solid(단일), dotted(동그란점선), dashed(파선), double(이중선)
 none(선없음)

border-color:테두리색상. 16진수 색상값이나 영문 색상명 

border-width:테두리굵기, 숫자단위(px)

예) 
 border-color:black; border-style:solid; border-width:1px

축약속성 border 이용, 공백을 이용하여 속성값 나열 
 예) border:black solid 1px;

테두리를 각방향으로 제어하고 싶다면?
 border-각방향-style
 border-각방향-color
 border-각방향-width
 border-각방향 
 예) 하단에만 테두리 적용
   border-bottom:1px solid black


// 모서리 굴림 효과 
border-radius:숫자단위(px)

- 각방향 제어 
border-top/bottom-left/right-radius:숫자단위(px)
예) 1시방향 굴림효과 
border-top-right-radius:10px;
예) 7시방향 굴림효과 
border-bottom-left-radius:10px;

// 모서리 굴림 디자인 소스 제공 사이트 
https://border-radius.com/


 -----------------------------------

// 여백의 종류 
- 안쪽 여백(패딩) : 테두리와 실제 컨텐츠 사이의 여백           
- 바깥 여백(마진) : 테두리 밖의 여백

- padding : 숫자단위(px), 상하좌우같은여백
- 각방향으로 지정가능 
  padding:상하 좌우, 공백기준으로 상하와 좌우 여백 분리  
  padding:12시 3시 6시 9시, 공백이용해서 
          12시를 기준으로 시계방향으로 여백 주기 
  padding-top/left/right/bottom : 숫자단위(px), 
                                  각방향키워드사용

- margin : 바깥여백 
  각방향으로 지정가능 
  margin: 숫자단위(px), 상하좌우같은여백
  margin:상하 좌우, 공백기준으로 상하와 좌우 여백 분리  
  margin:12시 3시 6시 9시 , 공백이용해서 
          12시를 기준으로 시계방향으로 여백 주기 
  margin-top/left/right/bottom : 숫자단위(px) 
  
- 블록요소를 중앙으로 배치하는 auto키워드 
margin의 좌우값을 auto로 지정시 중앙으로 배치 
1) 방법1
margin:상하바깥여백값 auto;
2) 방법2 
margin-left:auto;
margin-right:auto;
- 바깥여백 중첩현상 ?
위아래 여백이 겹쳐진 경우에는 숫자가 높은 쪽만 허용 
- 음수 마진 기법으로 위치 이동 
  margin-left / margin-top에 음수값을 이용해서 위치 이동 

---------------

// 테이블 관련 속성 
border-collapse:collapse
  : table 태그에 적용 
  : 셀과 셀 사이가 병합효과 
  : 테두리 이중선 제거 

  
 -----------------------------------
: 배경과 관련된 css 속성 
background : 축약속성 
background-color
background-image:url(배경이미지경로)
background-repeat:no-repeat/repeat-x/repeat-y/repeat
background-attachment:fixed(스크롤바에 상관없이 배경이미지 고정)/scroll

background-position:x좌표 y좌표  
  예약어-left/right/center/top/center/bottom


background-clip: border-box/padding-box/content-box
배경 적용 범위 조절 

background-size:auto/contain/cover
배경 이미지를 박스 크기에 맞추어 확대할건지 축소할건지?


background-origin 속성: 배경이미지를 배치할 기준 조절 
    border-box / padding-box / content-box


-------------------
- 웹색상체계
- https://www.w3schools.com/colors/default.asp
color / background-color
    : 16진수 색상값 #000000(#000) ~ #FFFFFF(#FFF)
    : 영문색상명 
    : rgb(red, green, blue)
    : rgba(red, green, blue, alpha)
    : hsl(hue, saturation%, light%)  
    : hsla(hue, saturation%, light%, alpha)    
    
  red / #ff0000 / rgb(255, 0, 0) / rgba(255, 0, 0, 1.0)

  h : hue 색조값 0~360
  s : sturation  탁한 정도 0~100%
  l : light 0~100%
  a : alpha  0.0 ~ 1.0


// 투명도 조정 css 속성 
alpha 0.0 ~ 1.0
opacity:0.0 ~ 1.0


-------------------

//선택자 (Selector) 
- CSS 적용 범위 
- head 방식과 외부 css 방식에서만 사용 가능 

head 영역에 style 태그 이용 
<style>
 /* css 주석문 */ 
 선택자 { 속성1:값1;속성2:값2;속성3:값3 }

</style>

// 태그선택자 
: html태그명 { css속성:값; }
: 특징 
 별도의 적용과정 없이 자동으로 css  디자인 적용 
 디자인 초기화시 사용 


// 클래스선택자 
: .클래스명 { css속성:값; }
1) head 영역이나 별도 css 파일에 클래스 정의 
2) 디자인을 적용할 html 태그안에 
   class='클래스이름' 속성 지정 
   
 2개이상의 클래스를 동일한 html 요소에 적용할 경우 
 class='클래스이름1 클래스이름2...'


// 아이디선택자 
: #아이디명 { css속성:값; }
1) head 영역이나 별도 css 파일에 아이디 정의 
2) 디자인을 적용할 html 태그안에 
   id='아이디이름' 속성 지정 

// 클래스 vs 아이디 
- 클래스는 여러번 사용 가능 
- 아이디는 문서에서 한번만 사용가능 

// 그룹선택자 
: 동일한 속성과 값을 갖도록 선택자 그룹핑 
선택자1, 선택자2 ... { css속성:값; ... }


//자손선택자 

레벨1 레벨2 레벨3 { css속성:값 }


//자식선택자 
레벨1>레벨2>레벨3 { css속성:값 }


// 하이퍼링크 관련 선택자 1
a:link {css속성:값}
a:visited {css속성:값}
a:hover {css속성:값}
a:active {css속성:값}


// 하이퍼링크 관련 선택자2 
a:link, a:visited {css속성:값}
a:hover, a:active {css속성:값}


// 전체 선택자 :초기화 
* { 속성:값 }

--------------------------
// 순서와 관련된 선택 
선택자:first-child
선택자:last-child
선택자:nth-child(odd/even/숫자/수식)

선택자:first-letter 
 : 첫번째 글자 
선택자:first-line
 : 첫번째 라인 

선택자:first-of-type
선택자:last-of-type
선택자:nth-of-type(숫자) 


--------------------------
// 폼의 상태변화 선택자 
폼요소:focus 
폼요소:blur
폼요소:hover
폼요소:active


-----------------------------------------------
// 속성과 값에 대한 선택자 
선택자[속성]
선택자[속성=값] 

선택자[속성^=값]  : 시작문자열값
선택자[속성$=값] : 마지막문자열값
선택자[속성*=값] :  문자열이 포함되었나?


// 태그명 순서와 관련된 선택자 
태그명:first-of-type : 특정 태그 중 첫번째 
태그명:last-of-type : 특정 태그 중 마지막
태그명:nth-of-type(n)  : 특정 태그 중 n번째 

// 속성과 값에 대한 선택자 
선택자[속성]
선택자[속성='값'] 

선택자[속성^=값]  : 시작문자열값
선택자[속성$=값] : 마지막문자열값
선택자[속성*=값] :  문자열이 포함되었나?

// 폼관련 상태 선택자 
선택자:focus -  입력상자안에 커서가 위치 


--------------------------------

>> 선택자 우선 순위 
1) 마지막에 입력된 선택자 소스가 우선순위가 높다.
2) 우선 순위는 ?
   전체 -> 태그 -> 클래스 -> 아이디 -> 인라인방식 -> !important
3) 


>> 선택자의 속성 상속 
상속이란?
 부모요소의 속성과 값이 그대로 적용 




 -----------------

 - css 삽입방식 
1) 내부방식 
  - 인라인방식 
  - head 방식 : 선택자 필요
2) 외부 방식 : 선택자 필요


>> css 외부파일 연결하기 
A - css문서 만들기 
B - html 문서에 css 문서 연결하기 
 head 영역에 삽입
 1) link 태그 방식 
   <link rel="stylesheet" href='css파일경로'>
 2) style 태그안에 import 
   <style type="text/css">
     @import url('css파일경로')
   </style>









